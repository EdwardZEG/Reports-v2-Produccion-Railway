import { Router, Request, Response, NextFunction } from 'express';
import {
  createPeriodoMP,
  getPeriodosMP,
  getPeriodoMPById,
  assignDevicesToPeriodo,
  completeDeviceInPeriodo,
  getDevicesPendingForColaborador,
  finalizePeriodoMP,
  searchAssignedDevicesForColaborador,
  getAllDevicesForColaborador,
  eliminarPeriodoMP,
  forzarEliminacionPeriodoMP,
  validarFechaActiva,
  actualizarFechasPeriodoMP,
  actualizarPeriodoMP,
  eliminarDispositivoAsignado,
  eliminarDispositivoAsignacionMultiple,
  editarAsignacionDispositivo
} from '../controllers/periodoMPController';

const router = Router();

// CRUD b치sico
router.post('/', createPeriodoMP);
router.get('/', getPeriodosMP);

// Validaci칩n de fechas para colaboradores (DEBE IR ANTES DE /:id)
router.get('/validar-fecha-activa', validarFechaActiva);

// Rutas con par치metros (DEBEN IR DESPU칄S DE LAS RUTAS ESPEC칈FICAS)
router.get('/:id', getPeriodoMPById);
router.patch('/:id', actualizarPeriodoMP); // Actualizar per칤odo completo
router.patch('/:id/finalize', finalizePeriodoMP);

// Actualizaci칩n de fechas
router.patch('/:id/fechas', actualizarFechasPeriodoMP);

// Gesti칩n de dispositivos en per칤odos
router.post('/:id/assign-devices', assignDevicesToPeriodo);
router.patch('/:periodoId/complete-device/:deviceCatalogId/:colaboradorId', (req: Request, res: Response, next: NextFunction) => {
  console.log('游꿢 === REQUEST LLEG칍 AL ENDPOINT DE COMPLETION ===');
  console.log('   Method:', req.method);
  console.log('   URL:', req.url);
  console.log('   Params:', req.params);
  console.log('   Body:', req.body);
  next();
}, completeDeviceInPeriodo);

// Editar asignaci칩n de dispositivo (cambiar colaborador asignado)
router.patch('/:periodoId/devices/:deviceId/collaborator', (req: Request, res: Response, next: NextFunction) => {
  console.log('游꿢 === REQUEST LLEG칍 AL ENDPOINT DE EDITAR ASIGNACI칍N ===');
  console.log('   Method:', req.method);
  console.log('   URL:', req.url);
  console.log('   Params:', req.params);
  console.log('   Body:', req.body);
  next();
}, editarAsignacionDispositivo);

// Eliminar dispositivo con asignaci칩n m칰ltiple (DEBE IR ANTES de la ruta gen칠rica)
router.delete('/:periodoId/dispositivos/:deviceCatalogId/multiple', eliminarDispositivoAsignacionMultiple);
// Eliminar dispositivo asignado espec칤fico
router.delete('/:periodoId/dispositivos/:deviceCatalogId/:colaboradorId', eliminarDispositivoAsignado);

// Para colaboradores
router.get('/colaborador/:colaboradorId/pending-devices', getDevicesPendingForColaborador);
router.get('/colaborador/:colaboradorId/assigned-devices-search', searchAssignedDevicesForColaborador);
router.get('/colaborador/:colaboradorId/all-devices', getAllDevicesForColaborador);

// Eliminaci칩n de per칤odos MP
router.delete('/:id', eliminarPeriodoMP);
router.delete('/:id/force', forzarEliminacionPeriodoMP);

export default router;